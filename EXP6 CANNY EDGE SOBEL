# CANNY EDGE
import cv2
import matplotlib.pyplot as plt
path = r'C:\Users\patil\’
img2 = cv2.imread(path, 0)
plt.imshow(img2, cmap='gray')
plt.title("Original Image")
plt.axis('off')
plt.show()
t_upper = 150
t_lower = 150  
edge = cv2.Canny(img2, t_lower, t_upper)
plt.subplot(1, 2, 2)
plt.imshow(edge, cmap='gray')
plt.title('Edge-detected Image')
plt.axis('off')
plt.show()


#SOBEL
GAUSSIAN BLUR
import cv2
import matplotlib.pyplot as plt
path = r'C:\Users\patil\’
img2 = cv2.imread(path, 0)
plt.imshow(img2, cmap='gray')
plt.title("Original Image")
plt.axis('off')
plt.show()
blurred_img = cv2.GaussianBlur(img2, (5, 5), 0)
plt.imshow(blurred_img, cmap='gray')
plt.title("Blurred Image")
plt.axis('off')
plt.show()
SOBEL IMAGE
#blurred image defined above
sobelx = cv2.Sobel(blurred_img, cv2.CV_64F, 1, 0, ksize=5)
sobely = cv2.Sobel(blurred_img, cv2.CV_64F, 0, 1, ksize=5)
sobelxy = cv2.Sobel(blurred_img, cv2.CV_64F, 1, 1, ksize=5)
plt.figure(figsize=(10, 5))
# Display Sobel x image
plt.subplot(1, 3, 1)
plt.imshow(sobelx, cmap='gray')
plt.title('Sobel X')
plt.axis('off')
# Display Sobel y image
plt.subplot(1, 3, 2)
plt.imshow(sobely, cmap='gray')
plt.title('Sobel Y')
plt.axis('off')
# Display Sobel xy image
plt.subplot(1, 3, 3)
plt.imshow(sobelxy, cmap='gray')
plt.title('Sobel XY')
plt.axis('off')
plt.show()
